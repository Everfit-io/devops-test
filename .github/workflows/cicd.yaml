# The pipeline should trigger automatically on code pushes to the main branch of the Github repository.
name: Build and test
on:
  push:
    branches:
      - main
  # Assumed that we also need to test code on pull requests
  pull_request:
    branches:
      - main

jobs:
  # test: build and test
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image to run test
        run: docker build --target=test -t devops-test:test-latest .

      - name: Run tests
        run: docker run --network=none --rm devops-test:test-latest poetry run pytest -s

  # Deploy: Deploy the application to the production environment
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate image tag base on the commit hash
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com
        run: |
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          echo "PROD_IMAGE=$ECR_REGISTRY/devops-test:m-$COMMIT_HASH" >> $GITHUB_ENV

      - name: Build image for production
        run: docker build -t $PROD_IMAGE .

      - name: Login to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ECR_REGION: ${{ secrets.ECR_REGION }}
        run: |
          aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Push image to ECR
        run: docker push $PROD_IMAGE

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform init
        run: terraform plan -auto-approve

      - name: Terraform plan
        run: terraform plan -var webapp_image=$PROD_IMAGE

      # - name: Terraform apply
      #   run: terraform apply -auto-approve
